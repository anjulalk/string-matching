GROUP INFO
---------------------------------------------------------------------------------
17000777    anjulakarunarathne@gmail.com
17000793    piyuk.thilaka@gmail.com
17000752    punsarachamath@gmail.com


USAGE
--------------------------------------------------------------------------------
Linux: ./app.py
Windows: python app.py

EXPLAINATION
--------------------------------------------------------------------------------
The program exectes when the command is typed into the terminal.
It then tries to open the DNA Database,  querybase and output files. If the files were not found it halts and returns an exit code.
Then two dictionaries for dnaDatabase and queryBase are generated with the input files.

The dictionaries are generated by reading the input files.
In the dictionary, the keys will be the descriptors and the values will be actual DNA strings.

Files are read line by line. If '>' character is at the first index of the line, a new key of the dictionary will be genereated with an empty string value.
The key is the full title of the query, which is stored in a temporary variable.
If the next line doesn't contain '>' at the first index, then it should be part of the previous DNA descriptor.
It concatenates to the value at the dictionary's temporary stored key.
This process continues for each every line until the file is completely read. Both files are processed in the same method.

The matching starts with iterating over the query base dictionary.
The description of the query is output to the file first.
Then for each element in the query base dictionary, DNA database dictionary is iterated over.
We check for the query in each DNA database sequence. If found the index is output to the file with the given format.
This repeats for each and every query.

There was a foundSwitch boolean whose purpose is to decide whether to print the 'NOT FOUND' at the end of each query matching.
If at least one match is found the boolean is set to true.
After matching all DNA sequences for one query, the boolean is checked.
If it is false then 'NOT FOUND' is output.

The algorithm used here is KMP, as it will take a lot of effort to match these data with naive algorithm.
Using KMP save a lot of time in cases like this, and there was no modification needed to the algorithm
Complexity of the algorithm: O(m(n-m+1))  

RUNNING TESTS
--------------------------------------------------------------------------------
Given DNA Database file is included in the program directory as well as sample query base  file

Linux: ./app.py
Windows: python app.py

Output will be stored in the output.txt file.